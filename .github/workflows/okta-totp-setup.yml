name: Okta TOTP Setup and LDAP Authentication
on:
  workflow_dispatch:
  push:
    # 自身のプロジェクトで試す時はブランチ名を動かしたいブランチ名に変更してください
    branches:
      - auth-otp-in-ci-by-okta

jobs:
  delete-existing-totp:
    runs-on: ubuntu-latest
    steps:
      - name: Delete existing TOTP factor
        run: |
          # 対象ユーザーの認証要素を取得する
          FACTORS=$(curl -s -X GET \
            "https://${{ secrets.OKTA_DOMAIN }}.okta.com/api/v1/users/${{ secrets.USER_ID }}/factors" \
            -H "Authorization: SSWS ${{ secrets.OKTA_API_TOKEN }}" \
            -H "Accept: application/json")
          # 取得した認証要素から、TOTPに該当する要素のIDを取得する
          TOTP_FACTOR_ID=$(echo $FACTORS | jq -r '.[] | select(.factorType=="token:software:totp") | .id') 
          # もしTOTP要素が存在する場合は削除する
          if [ ! -z "$TOTP_FACTOR_ID" ]; then
            curl -X DELETE \
              "https://${{ secrets.OKTA_DOMAIN }}.okta.com/api/v1/users/${{ secrets.USER_ID }}/factors/${TOTP_FACTOR_ID}" \
              -H "Authorization: SSWS ${{ secrets.OKTA_API_TOKEN }}";
          fi

  ldap-authentication:
    runs-on: ubuntu-latest
    needs: delete-existing-totp
    steps:
      - name: Install tools
        run: sudo apt-get update && sudo apt-get install -y oathtool ldap-utils

      - name: Perform LDAP authentication
        run: |
          # 対象ユーザーの認証要素としてTOTPを登録する(有効化作業が別途必要)
          # API仕様書（https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/enrollFactor）
          ENROLL_RESPONSE=$(curl -s -X POST "https://${{ secrets.OKTA_DOMAIN }}.okta.com/api/v1/users/${{ secrets.USER_ID }}/factors" \
            -H "Authorization: SSWS ${{ secrets.OKTA_API_TOKEN }}" \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -d '{ "factorType": "token:software:totp", "provider": "OKTA" }')

          # 登録したTOTPのIDとTOTP生成のためのシークレットを取得する
          FACTOR_ID=$(echo $ENROLL_RESPONSE | jq -r '.id') 
          export OKTA_TOTP_SECRET=$(echo $ENROLL_RESPONSE | jq -r '._embedded.activation.sharedSecret')

          # OTPを生成する
          OTP=$(oathtool --totp -b "$OKTA_TOTP_SECRET") 
          # 登録したTOTPによる認証を有効化するために、生成したOTPを使用して有効化リクエストを送信する
          # API仕様書（https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/activateFactor）
          curl -s -X POST "https://${{ secrets.OKTA_DOMAIN }}.okta.com/api/v1/users/${{ secrets.USER_ID }}/factors/${FACTOR_ID}/lifecycle/activate" \
            -H "Authorization: SSWS ${{ secrets.OKTA_API_TOKEN }}" \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -d "{ \"passCode\": \"${OTP}\" }"

          # 認証用のOTPを生成する
          OTP_FOR_LDAP=$(oathtool --totp -b "$OKTA_TOTP_SECRET")

          # リトライ処理をするためにループ処理を記載
          for attempt in 1 2 3; do
            echo "LDAP authentication attempt $attempt"
            
            # Okta LDAP Interfaceにリクエストを送信して認証を試みる
            # ldapsearchが成功した場合はループを抜ける
            ldapsearch -H "ldaps://${{ secrets.OKTA_DOMAIN }}.ldap.okta.com:636" \
              -D "uid=${{ secrets.LDAP_UID }},dc=${{ secrets.OKTA_DOMAIN }},dc=okta,dc=com" \
              -w "${{ secrets.USER_PASSWORD }},${OTP_FOR_LDAP}" \
              -b "dc=${{ secrets.OKTA_DOMAIN }},dc=okta,dc=com" \
              "(objectClass=person)" && {
                echo "LDAP authentication successful"
                break
              }
            
            echo "LDAP authentication failed (attempt $attempt)"
            [ $attempt -lt 3 ] && {
              echo "Waiting 2 seconds before retry..."
              sleep 2
              continue
            }

            # 全てのLDAP認証試行が失敗した場合はエラーを出力
            echo "All LDAP authentication attempts failed"
            exit 1
          done
